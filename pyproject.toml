[tool.ruff]
exclude = ["tests"]
line-length = 88
target-version = "py312"
lint.select = [
    "E", # pycodestyle
    "F", # pyflakes
    "W", # pycodestyle
    "C90", # mccabe
    "I", # isort
    "UP", # pyupgrade
    "N", # pep8-naming
    "YTT", # flake8-2020
    "ASYNC", # flake8-async
    "S", # flake8-bandit
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "DJ", # flake8-django
    "EM", # flake8-errmsg
    "EXE", # flake8-executable
    "FA", # flake8-future-annotations
    "ICN", # flake8-import-conventions
    "G", # flake8-logging-format
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "INT", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "TD", # flake8-todos
    "FIX", # flake8fixme
    "ERA", # eradicate
    "PD", # pandas-vet
    "TRY", # tryceratops
    "FLY", # flynt
    "NPY", # NumPy-specific rules
    "AIR", # Airflow
    "PERF", # Perflint
    "FURB", # refurb
]
ignore = ["S105"]
lint.per-file-ignores.ignore = ["ANN101", "CPY001"] # annotations for self
src = ["src", "tests"]
preview = true

[tool.ruff.per-file-ignores]
"tests/*.py" = [
    "PLR2004", # magic value comparison
    "S101", # use of assert detected
    "TCH002", # third party import (for pytest)
    "S105",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.pylint]
disable = [
    "C0114",  # Missing module docstring
    "C0115",
    "R0903",
    "E1101",
    "E0307",
    "C0116",  # Missing function or method docstring
    "W0611",  # Unused import
]
max-line-length = 88
